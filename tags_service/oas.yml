openapi: 3.0.3

info:
  title: Tags Service - OpenAPI 3.0
  version: 0.0.1

paths:
  /tags:
    get:
      summary: Get all tags
      operationId: getAllTags
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/GetTagSchema'
    post:
      summary: Create a new tag
      operationId: createTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagSchema'
  
  /tags/{tag_id}:
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    put:
      summary: Update the name of a tag
      operationId: updateTag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagSchema'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/GetTagSchema'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete a tag
      operationId: deleteTag
      responses:
        '404':
          $ref: '#/components/responses/NotFound'

  /tags/{tag_id}/graph:
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get tgg relationships with other tags
      operationId: getTagGraph
      responses:
        '404':
          $ref: '#/components/responses/NotFound'

  /tags/{tag_id}/notes:
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get all notes with this tag
      operationId: getNotesWithTag
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/LightNoteSchema'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    TagSchema:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    GetTagSchema:
      allOf:
        - $ref: '#/components/schemas/TagSchema'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            created:
              type: string
              format: date-time
            updated:
              type: string
              format: date-time
          required:
            - id
            - created
            - updated

    CreateTagSchema:
      allOf:
        - $ref: '#/components/schemas/TagSchema'
    
    UpdateTagSchema:
      allOf:
        - $ref: '#/components/schemas/TagSchema'
    
    LightNoteSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        short_description:
          type: string
      required:
        - id
        - title
        - short_description

    Error:
      type: object
      properties:
        detail:
          type: string
      required:
        - detail

  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
